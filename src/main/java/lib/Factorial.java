package lib;

import java.math.BigInteger;

public class Factorial {

    public static void main(String[] args) {
        for (int n = 0;; n++) {
            if (n < 0) {
                // Overflow
                break;
            }
            System.out.print("new BigInteger(\"" + BigIntegers.factorial(n)
                    + "\"), ");
            if ((n + 1) % 25 == 0) {
                System.out.println();
            }
        }
    }

    public static final long[] FACTORIAL_TABLE = { 1L, 1L, 2L, 6L, 24L, 120L,
            720L, 5040L, 40320L, 362880L, 3628800L, 39916800L, 479001600L,
            6227020800L, 87178291200L, 1307674368000L, 20922789888000L,
            355687428096000L, 6402373705728000L, 121645100408832000L,
            2432902008176640000L };

    public static final BigInteger[] BIG_FACTORIAL_TABLE = {
            new BigInteger("1"),
            new BigInteger("1"),
            new BigInteger("2"),
            new BigInteger("6"),
            new BigInteger("24"),
            new BigInteger("120"),
            new BigInteger("720"),
            new BigInteger("5040"),
            new BigInteger("40320"),
            new BigInteger("362880"),
            new BigInteger("3628800"),
            new BigInteger("39916800"),
            new BigInteger("479001600"),
            new BigInteger("6227020800"),
            new BigInteger("87178291200"),
            new BigInteger("1307674368000"),
            new BigInteger("20922789888000"),
            new BigInteger("355687428096000"),
            new BigInteger("6402373705728000"),
            new BigInteger("121645100408832000"),
            new BigInteger("2432902008176640000"),
            new BigInteger("51090942171709440000"),
            new BigInteger("1124000727777607680000"),
            new BigInteger("25852016738884976640000"),
            new BigInteger("620448401733239439360000"),
            new BigInteger("15511210043330985984000000"),
            new BigInteger("403291461126605635584000000"),
            new BigInteger("10888869450418352160768000000"),
            new BigInteger("304888344611713860501504000000"),
            new BigInteger("8841761993739701954543616000000"),
            new BigInteger("265252859812191058636308480000000"),
            new BigInteger("8222838654177922817725562880000000"),
            new BigInteger("263130836933693530167218012160000000"),
            new BigInteger("8683317618811886495518194401280000000"),
            new BigInteger("295232799039604140847618609643520000000"),
            new BigInteger("10333147966386144929666651337523200000000"),
            new BigInteger("371993326789901217467999448150835200000000"),
            new BigInteger("13763753091226345046315979581580902400000000"),
            new BigInteger("523022617466601111760007224100074291200000000"),
            new BigInteger("20397882081197443358640281739902897356800000000"),
            new BigInteger("815915283247897734345611269596115894272000000000"),
            new BigInteger("33452526613163807108170062053440751665152000000000"),
            new BigInteger(
                    "1405006117752879898543142606244511569936384000000000"),
            new BigInteger(
                    "60415263063373835637355132068513997507264512000000000"),
            new BigInteger(
                    "2658271574788448768043625811014615890319638528000000000"),
            new BigInteger(
                    "119622220865480194561963161495657715064383733760000000000"),
            new BigInteger(
                    "5502622159812088949850305428800254892961651752960000000000"),
            new BigInteger(
                    "258623241511168180642964355153611979969197632389120000000000"),
            new BigInteger(
                    "12413915592536072670862289047373375038521486354677760000000000"),
            new BigInteger(
                    "608281864034267560872252163321295376887552831379210240000000000"),
            new BigInteger(
                    "30414093201713378043612608166064768844377641568960512000000000000"),
            new BigInteger(
                    "1551118753287382280224243016469303211063259720016986112000000000000"),
            new BigInteger(
                    "80658175170943878571660636856403766975289505440883277824000000000000"),
            new BigInteger(
                    "4274883284060025564298013753389399649690343788366813724672000000000000"),
            new BigInteger(
                    "230843697339241380472092742683027581083278564571807941132288000000000000"),
            new BigInteger(
                    "12696403353658275925965100847566516959580321051449436762275840000000000000"),
            new BigInteger(
                    "710998587804863451854045647463724949736497978881168458687447040000000000000"),
            new BigInteger(
                    "40526919504877216755680601905432322134980384796226602145184481280000000000000"),
            new BigInteger(
                    "2350561331282878571829474910515074683828862318181142924420699914240000000000000"),
            new BigInteger(
                    "138683118545689835737939019720389406345902876772687432540821294940160000000000000"),
            new BigInteger(
                    "8320987112741390144276341183223364380754172606361245952449277696409600000000000000"),
            new BigInteger(
                    "507580213877224798800856812176625227226004528988036003099405939480985600000000000000"),
            new BigInteger(
                    "31469973260387937525653122354950764088012280797258232192163168247821107200000000000000"),
            new BigInteger(
                    "1982608315404440064116146708361898137544773690227268628106279599612729753600000000000000"),
            new BigInteger(
                    "126886932185884164103433389335161480802865516174545192198801894375214704230400000000000000"),
            new BigInteger(
                    "8247650592082470666723170306785496252186258551345437492922123134388955774976000000000000000"),
            new BigInteger(
                    "544344939077443064003729240247842752644293064388798874532860126869671081148416000000000000000"),
            new BigInteger(
                    "36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000"),
            new BigInteger(
                    "2480035542436830599600990418569171581047399201355367672371710738018221445712183296000000000000000") };
}
